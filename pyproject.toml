[project]
name = "fastapi-template"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "arrow>=1.3.0",
    "fastapi[all]>=0.116.1",
    "orjson>=3.11.2",
]

[tool.ruff]
src = ["app", "tests"]
line-length = 120
exclude = ["resources/**"]

[tool.ruff.lint]
ignore = [
    "A005", # Shadowing built-in name
    "E501",
    "ANN401",
    "UP046", # For pydancit models, we can't use type parameters for generic types
    "B008", # do not perform function calls in argument defaults
    "B904", # Allow raising exceptions without from e, for HTTPException
]
preview = true
explicit-preview-rules = true
extend-select = [
    "A", # flake8-builtins
    "B", # flake8-bugbear
    "C", # flake8-comprehensions
    "E", # pycodestyle errors
    "F", # pyflakes
    "I", # isort
    "UP", # pyupgrade
    "W", # pycodestyle warnings
    "G", # flake8-logging-format
    "N", # pep8-naming
    "Q", # flake8-quotes
    "S", # flake8-bandit
    "ANN", # flake8-annotations
    "ARG", # flake8-unused-arguments
    "BLE", # flake8-blind-except
    "DTZ", # flake8-datetimez
    "ICN", # flake8-import-conventions
    "INP", # flake8-no-pep420
    "LOG", # flake8-logging
    "PIE", # flake8-pie
    "PTH", # flake8-use-pathlib
    "RUF", # Ruff-specific rules
    "SIM", # flake8-simplify
    "T20", # flake8-print
    "TCH", # flake8-type-checking
    "FAST", # FastAPI
    "SLOT", # flake8-slots
    "ASYNC", # flake8-async
    "PYI036", # bad-exit-annotation
    "PLC0414", # useless-import-alias
    "PLR1722", # sys-exit-alias
    "PLR2004", # magic-value-comparison
    "PLR5501", # collapsible-else-if
    # Preview rules
    "PLW1514", # unspecified-encoding
]

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403"]
"tests/**" = ["S101", "ARG001", "ARG002", "ANN001", "ANN201"]
"app/alembic/versions/**" = ["N999"]

[tool.ruff.lint.isort]
force-single-line = true

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true
